<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TreeViewWithCheckBoxes"
                    >
    <DataTemplate DataType="{x:Type local:TreeViewCheckBoxListView}">
        <Grid>
            <TreeView Style="{StaticResource ResourceKey=SearchableTreeView}" ItemsSource="{Binding Path=Roots, Mode=OneWay}" Background="Transparent"/>
            <Border Style="{StaticResource ResourceKey=searchBox}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Source="pack://application:,,,/Resources/Images/Search.png"/>
                    <ComboBox Grid.Column="1"
                              IsEditable="True"
                              ItemsSource="{Binding Path=PreviousCriteria, Mode=OneWay}"
                              SelectedItem="{Binding Path=SelectedCriteria}"
                              Text="{Binding Path=CurrentCriteria, UpdateSourceTrigger=PropertyChanged}"
                              local:EventCommand.Event="UIElement.KeyDown"
                              local:EventCommand.Command="{Binding Path=StoreInPreviousCommand, Mode=OneWay}"/>
                </Grid>
            </Border>
        </Grid>
    </DataTemplate>
    
    <Style x:Key="searchBox" TargetType="{x:Type Border}">
        <Style.Resources>
            <ElasticEase x:Key="easeInEase" EasingMode="EaseOut" Oscillations="2" Springiness="7"/>
            <SineEase x:Key="easeOutEase" EasingMode="EaseIn"/>
        </Style.Resources>

        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="2 2 2 2"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#F0F0F0" Offset="0.0" />
                    <GradientStop Color="#C0C0C0" Offset="1.0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(Border.Width)" EasingFunction="{StaticResource ResourceKey=easeInEase}" To="200" Duration="0:0:1.0"/>
                        <DoubleAnimation Storyboard.TargetProperty="(Border.Height)" EasingFunction="{StaticResource ResourceKey=easeInEase}" To="30" Duration="0:0:1.0"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(Border.Width)" EasingFunction="{StaticResource ResourceKey=easeOutEase}" To="16" Duration="0:0:0.2"/>
                        <DoubleAnimation Storyboard.TargetProperty="(Border.Height)" EasingFunction="{StaticResource ResourceKey=easeOutEase}" To="16" Duration="0:0:0.2"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>